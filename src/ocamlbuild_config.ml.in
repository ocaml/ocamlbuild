(***********************************************************************)
(*                                                                     *)
(*                             ocamlbuild                              *)
(*                                                                     *)
(*  Nicolas Pouillard, Berke Durak, projet Gallium, INRIA Rocquencourt *)
(*                                                                     *)
(*  Copyright 2007 Institut National de Recherche en Informatique et   *)
(*  en Automatique.  All rights reserved.  This file is distributed    *)
(*  under the terms of the GNU Library General Public License, with    *)
(*  the special exception on linking described in file ../LICENSE.     *)
(*                                                                     *)
(***********************************************************************)

(* This file used to be generated by `make -f configure.make`, but is now
   pre-processed with cppo with values determined by Dune. *)
(* Temporary fix on basename - Dune may have passed ocamlc binary path.
   Continue to respect ocamlbuild's arm-gnawing need to be buildable without
   Unix. *)
let bindir =
  let d = STRINGIFY(BINDIR) in
  if Sys.file_exists d then
    try Sys.readdir d |> ignore; d
    with _ ->
      Filename.dirname d
  else d
let libdir = STRINGIFY(LIBDIR)
let ocaml_libdir = STRINGIFY(OCAMLLIB)
let libdir_abs = STRINGIFY(LIBDIR_ABS)
let ocaml_native = STRINGIFY(ARCH) <> "none"
(* @@DRA This should be probed from Makefile.config (Dune feature?) *)
let supports_shared_libraries = true
let strip_dot s = String.sub s 1 (String.length s - 1)
let a = strip_dot STRINGIFY(EXT_LIB)
let o = strip_dot STRINGIFY(EXT_OBJ)
let so = strip_dot STRINGIFY(EXT_SO)
let ext_dll = STRINGIFY(EXT_SO)
let exe = STRINGIFY(EXT_EXE)
let version = STRINGIFY(VERSION)
